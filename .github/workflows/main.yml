name: .NET Build and Test

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Check code formatting (non-breaking)
      run: |
        dotnet format --verify-no-changes --verbosity diagnostic || echo "Code formatting issues found, but continuing build"
      continue-on-error: true
      
    - name: Run tests (if any exist)
      run: |
        if find . -name "*.Test*.csproj" -o -name "*Test*.csproj" -o -name "*Tests.csproj" | grep -q .; then
          echo "Test projects found, running tests..."
          dotnet test --no-build --configuration Release --verbosity normal
        else
          echo "No test projects found, skipping tests"
        fi
      continue-on-error: true
      
    - name: Build Summary
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Build Status:** Successful" >> $GITHUB_STEP_SUMMARY
        echo "🔧 **.NET Version:** 8.0.x" >> $GITHUB_STEP_SUMMARY
        echo "📦 **Configuration:** Release" >> $GITHUB_STEP_SUMMARY
        echo "🕒 **Build Time:** $(date)" >> $GITHUB_STEP_SUMMARY

  code-quality:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Code Analysis
      run: |
        echo "## Code Quality Analysis" >> $GITHUB_STEP_SUMMARY
        
        # Count lines of code
        TOTAL_LINES=$(find . -name "*.cs" -not -path "./bin/*" -not -path "./obj/*" | xargs wc -l | tail -1 | awk '{print $1}')
        echo "📊 **Lines of Code:** $TOTAL_LINES" >> $GITHUB_STEP_SUMMARY
        
        # Count C# files
        CS_FILES=$(find . -name "*.cs" -not -path "./bin/*" -not -path "./obj/*" | wc -l)
        echo "📁 **C# Files:** $CS_FILES" >> $GITHUB_STEP_SUMMARY
        
        # List main classes
        echo "🏗️ **Main Classes:**" >> $GITHUB_STEP_SUMMARY
        find . -name "*.cs" -not -path "./bin/*" -not -path "./obj/*" -exec basename {} .cs \; | sort | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY
